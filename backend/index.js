import express from "express";
import dotenv from "dotenv";
import bodyParser from "body-parser";
import cors from "cors";
import sequelize from "./config/database.js";
import CDrinkRouter from "./CDrink/CDrinkRouter.js";
import orderRouter from "./Order/OrderRouter.js";
import UserRouter from "./User/UserRouter.js";
import CategoryRouter from "./Category/CategoryRouter.js";
import SubcategoryRouter from "./Subcategory/SubcategoryRouter.js";
import ProductRouter from "./Product/ProductRouter.js";
import path from "path";
import { fileURLToPath } from "url";
import fs from "fs";

dotenv.config();

const app = express();

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º __dirname –¥–ª—è ES-–º–æ–¥—É–ª—è
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// –†–∞–∑—Ä–µ—à–∞–µ–º CORS
app.use(cors({ origin: "http://localhost:3000" }));

// –û–±—Ä–∞–±–æ—Ç–∫–∞ JSON
app.use(express.json());
app.use(bodyParser.json());

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–æ–≤
app.use("/api/user", UserRouter);
app.use("/api/orders", orderRouter);
app.use("/api/categories", CategoryRouter);
app.use("/api/subcategory", SubcategoryRouter);
app.use("/api/product", ProductRouter);
app.use ("/api/cdrink", CDrinkRouter);

// **–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–∑–¥–∞—á–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π**
const uploadPath = path.join(__dirname, "uploads", "product");

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–∞–ø–∫–∞ `uploads/product`, –∏ –µ—Å–ª–∏ –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –µ—ë
if (!fs.existsSync(uploadPath)) {
  console.error("‚ùå –ü–∞–ø–∫–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–æ–∑–¥–∞—é...");
  fs.mkdirSync(uploadPath, { recursive: true });
} else {
  console.log("‚úÖ –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã —Ä–∞–∑–¥–∞—é—Ç—Å—è –∏–∑:", uploadPath);
}

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ (–µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è)
fs.chmodSync(uploadPath, 0o755); // –î–æ—Å—Ç—É–ø –¥–ª—è —á—Ç–µ–Ω–∏—è/–∑–∞–ø–∏—Å–∏

// –†–∞–∑–¥–∞–µ–º —Ñ–∞–π–ª—ã –∏–∑ `uploads/product`
app.use("/uploads/product", express.static(uploadPath));

// **–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ—Å–ª–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å –ë–î**
sequelize
  .sync({ alter: true })
  .then(() => {
    console.log("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–∞.");
    const PORT = process.env.PORT || 3001;
    app.listen(PORT, () => {
      console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${PORT}`);
    });
  })
  .catch((error) => {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:", error);
  });
